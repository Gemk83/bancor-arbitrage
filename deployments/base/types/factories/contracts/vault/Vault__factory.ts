/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vault, VaultInterface } from "../../../contracts/vault/Vault";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract Token",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "roleAssetManager",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Token",
        name: "token",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600160005562000032600080516020620018f2833981519152806200008e565b6200006d7f89ce14d20697a788f57260f7690044299bde7ea88cfb7e43d120a0c031f1ffc1600080516020620018f28339815191526200008e565b62000088600080516020620018f283398151915233620000db565b62000210565b6000828152600160208190526040808320909101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b620000e78282620000eb565b5050565b620000f7828262000116565b60008281526002602052604090206200011190826200019e565b505050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620000e75760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000620001b5836001600160a01b038416620001be565b90505b92915050565b60008181526001830160205260408120546200020757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001b8565b506000620001b8565b6116d280620002206000396000f3fe6080604052600436106100cb5760003560e01c806391d1485411610074578063a217fddf1161004e578063a217fddf146102ab578063ca15c873146102c0578063d547741f146102e057600080fd5b806391d14854146101f257806392bd95ea1461024557806393867fb51461027857600080fd5b80632f2ff15d116100a55780632f2ff15d1461016d57806336568abe1461018d5780639010d07c146101ad57600080fd5b806301ffc9a7146100d75780631c20fadd1461010c578063248a9ca31461012e57600080fd5b366100d257005b600080fd5b3480156100e357600080fd5b506100f76100f2366004611353565b610300565b60405190151581526020015b60405180910390f35b34801561011857600080fd5b5061012c6101273660046113b7565b61035c565b005b34801561013a57600080fd5b5061015f6101493660046113f8565b6000908152600160208190526040909120015490565b604051908152602001610103565b34801561017957600080fd5b5061012c610188366004611411565b61048c565b34801561019957600080fd5b5061012c6101a8366004611411565b6104b7565b3480156101b957600080fd5b506101cd6101c8366004611441565b61056f565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610103565b3480156101fe57600080fd5b506100f761020d366004611411565b600091825260016020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b34801561025157600080fd5b507f89ce14d20697a788f57260f7690044299bde7ea88cfb7e43d120a0c031f1ffc161015f565b34801561028457600080fd5b507f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca02509661015f565b3480156102b757600080fd5b5061015f600081565b3480156102cc57600080fd5b5061015f6102db3660046113f8565b61058e565b3480156102ec57600080fd5b5061012c6102fb366004611411565b6105a5565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f5a05180f0000000000000000000000000000000000000000000000000000000014806103565750610356826105cb565b92915050565b8161036681610662565b61036e6106b2565b3360009081527f620a24bca14c153ba0bbdd11350de229d64f1884342061de1b92f9034e0a7df0602052604090205460ff166103d6576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b811561047c576103fd73ffffffffffffffffffffffffffffffffffffffff85168484610725565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc322efa58c9cb2c39cfffdac61d35c8643f5cbf13c6a7d0034de2cf18923aff38560405161047391815260200190565b60405180910390a45b6104866001600055565b50505050565b600082815260016020819052604090912001546104a8816107a4565b6104b283836107ae565b505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b61056b82826107d0565b5050565b600082815260026020526040812061058790836107f2565b9392505050565b6000818152600260205260408120610356906107fe565b600082815260016020819052604090912001546105c1816107a4565b6104b283836107d0565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061035657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610356565b73ffffffffffffffffffffffffffffffffffffffff81166106af576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60026000540361071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610558565b6002600055565b8060000361073257505050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff841603610783576104b273ffffffffffffffffffffffffffffffffffffffff831682610808565b6104b273ffffffffffffffffffffffffffffffffffffffff84168383610962565b6106af81336109ef565b6107b88282610aa9565b60008281526002602052604090206104b29082610b68565b6107da8282610b8a565b60008281526002602052604090206104b29082610c45565b60006105878383610c67565b6000610356825490565b80471015610872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610558565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146108cc576040519150601f19603f3d011682016040523d82523d6000602084013e6108d1565b606091505b50509050806104b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610558565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526104b2908490610c91565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1661056b57610a2f81610da0565b610a3a836020610dbf565b604051602001610a4b929190611487565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261055891600401611508565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1661056b57600082815260016020818152604080842073ffffffffffffffffffffffffffffffffffffffff8616808652925280842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b60006105878373ffffffffffffffffffffffffffffffffffffffff8416611002565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff161561056b57600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006105878373ffffffffffffffffffffffffffffffffffffffff8416611051565b6000826000018281548110610c7e57610c7e611559565b9060005260206000200154905092915050565b6000610cf3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166111449092919063ffffffff16565b9050805160001480610d14575080806020019051810190610d149190611588565b6104b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610558565b606061035673ffffffffffffffffffffffffffffffffffffffff831660145b60606000610dce8360026115d9565b610dd99060026115f0565b67ffffffffffffffff811115610df157610df1611603565b6040519080825280601f01601f191660200182016040528015610e1b576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610e5257610e52611559565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610eb557610eb5611559565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610ef18460026115d9565b610efc9060016115f0565b90505b6001811115610f99577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610f3d57610f3d611559565b1a60f81b828281518110610f5357610f53611559565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93610f9281611632565b9050610eff565b508315610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610558565b600081815260018301602052604081205461104957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610356565b506000610356565b6000818152600183016020526040812054801561113a576000611075600183611667565b855490915060009061108990600190611667565b90508181146110ee5760008660000182815481106110a9576110a9611559565b90600052602060002001549050808760000184815481106110cc576110cc611559565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806110ff576110ff61167a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610356565b6000915050610356565b6060611153848460008561115b565b949350505050565b6060824710156111ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610558565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161121691906116a9565b60006040518083038185875af1925050503d8060008114611253576040519150601f19603f3d011682016040523d82523d6000602084013e611258565b606091505b509150915061126987838387611274565b979650505050505050565b6060831561130a5782516000036113035773ffffffffffffffffffffffffffffffffffffffff85163b611303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610558565b5081611153565b611153838381511561131f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105589190611508565b60006020828403121561136557600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461058757600080fd5b73ffffffffffffffffffffffffffffffffffffffff811681146106af57600080fd5b6000806000606084860312156113cc57600080fd5b83356113d781611395565b925060208401356113e781611395565b929592945050506040919091013590565b60006020828403121561140a57600080fd5b5035919050565b6000806040838503121561142457600080fd5b82359150602083013561143681611395565b809150509250929050565b6000806040838503121561145457600080fd5b50508035926020909101359150565b60005b8381101561147e578181015183820152602001611466565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516114bf816017850160208801611463565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516114fc816028840160208801611463565b01602801949350505050565b6020815260008251806020840152611527816040850160208701611463565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561159a57600080fd5b8151801515811461058757600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610356576103566115aa565b80820180821115610356576103566115aa565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081611641576116416115aa565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b81810381811115610356576103566115aa565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600082516116bb818460208701611463565b919091019291505056fea164736f6c6343000813000a2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Vault> {
    return super.deploy(overrides || {}) as Promise<Vault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
